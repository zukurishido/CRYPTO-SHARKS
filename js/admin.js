// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞
let isAuthenticated = false;
let isAdminPanelVisible = false;

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function updateAdminPanelInfo() { function toggleAdmin() {
    if (!isAuthenticated) {
        const password = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:');
        if (password !== CONFIG.ADMIN_PASSWORD) {  // –¢–µ–ø–µ—Ä—å –±–µ—Ä—ë–º –ø–∞—Ä–æ–ª—å –∏–∑ CONFIG
            alert('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!');
            return;
        }
        isAuthenticated = true;
    }
    // ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥
}
    const year = document.getElementById('yearSelect').value;
    const month = document.getElementById('monthSelect').value;
    const category = document.getElementById('categorySelect').value;
    
    const monthNames = {
        '1': '–Ø–Ω–≤–∞—Ä—å', '2': '–§–µ–≤—Ä–∞–ª—å', '3': '–ú–∞—Ä—Ç', '4': '–ê–ø—Ä–µ–ª—å',
        '5': '–ú–∞–π', '6': '–ò—é–Ω—å', '7': '–ò—é–ª—å', '8': '–ê–≤–≥—É—Å—Ç',
        '9': '–°–µ–Ω—Ç—è–±—Ä—å', '10': '–û–∫—Ç—è–±—Ä—å', '11': '–ù–æ—è–±—Ä—å', '12': '–î–µ–∫–∞–±—Ä—å'
    };

    document.getElementById('currentSettings').innerHTML = `
        <div class="current-setting">
            <span class="setting-label">–ì–æ–¥:</span>
            <span class="setting-value">${year}</span>
        </div>
        <div class="current-setting">
            <span class="setting-label">–ú–µ—Å—è—Ü:</span>
            <span class="setting-value">${monthNames[month]}</span>
        </div>
        <div class="current-setting">
            <span class="setting-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
            <span class="setting-value">${category}</span>
        </div>
    `;
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function toggleAdmin() {
    if (!isAuthenticated) {
        const password = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:');
        if (password !== ADMIN_PASSWORD) {
            alert('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!');
            return;
        }
        isAuthenticated = true;
    }

    const panel = document.getElementById('adminPanel');
    isAdminPanelVisible = !isAdminPanelVisible;
    
    if (isAdminPanelVisible) {
        panel.classList.add('visible');
        updateAdminPanelInfo();
        showBulkInput(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –º–∞—Å—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        gsap.to(panel, {
            right: 0,
            duration: 0.3,
            ease: 'power2.out'
        });
    } else {
        gsap.to(panel, {
            right: -400,
            duration: 0.3,
            ease: 'power2.in',
            onComplete: () => panel.classList.remove('visible')
        });
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–¥–µ–ª–æ–∫
function parseBulkTrades() {
    const bulkText = document.getElementById('bulkInput').value;
    const lines = bulkText.split('\n').filter(line => line.trim() !== '');
    
    let currentCategory = '';
    let trades = [];
    let stats = {
        DEFI: { profit: 0, loss: 0, count: 0 },
        FUTURES: { profit: 0, loss: 0, count: 0 },
        SPOT: { profit: 0, loss: 0, count: 0 }
    };

    lines.forEach(line => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        if (line.includes('DEFI:')) {
            currentCategory = 'DEFI';
            return;
        } else if (line.includes('FUTURES:')) {
            currentCategory = 'FUTURES';
            return;
        } else if (line.includes('SPOT:')) {
            currentCategory = 'SPOT';
            return;
        }

        // –ü–∞—Ä—Å–∏–º —Å–¥–µ–ª–∫—É
        const tradeMatch = line.match(/\d+\.#(\w+)\s*([-+])\s*(\d+\.?\d*)%\s*(?:\((\d+)x\)?)?/);
        
        if (tradeMatch && currentCategory) {
            const [_, symbol, sign, value, leverage] = tradeMatch;
            const result = (sign === '+' ? 1 : -1) * parseFloat(value);
            
            const trade = {
                pair: symbol,
                result: result,
                status: result > 0 ? 'profit' : (result < 0 ? 'loss' : 'neutral'),
                leverage: leverage || '',
                comment: leverage ? `(${leverage}x)` : '',
                category: currentCategory
            };

            trades.push(trade);

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            if (result > 0) {
                stats[currentCategory].profit += result;
            } else {
                stats[currentCategory].loss += Math.abs(result);
            }
            stats[currentCategory].count++;
        }
    });

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    let confirmText = '–ù–∞–π–¥–µ–Ω—ã —Å–¥–µ–ª–∫–∏:\n\n';
    
    for (let category in stats) {
        if (stats[category].count > 0) {
            confirmText += `${category}:\n`;
            confirmText += `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${stats[category].count}\n`;
            confirmText += `–û–±—â–∏–π –ø—Ä–æ—Ñ–∏—Ç: +${stats[category].profit.toFixed(1)}%\n`;
            confirmText += `–û–±—â–∏–π —É–±—ã—Ç–æ–∫: -${stats[category].loss.toFixed(1)}%\n\n`;
        }
    }

    confirmText += '–î–æ–±–∞–≤–∏—Ç—å —ç—Ç–∏ —Å–¥–µ–ª–∫–∏?';

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    if (confirm(confirmText)) {
        const year = document.getElementById('yearSelect').value;
        const month = document.getElementById('monthSelect').value;

        trades.forEach(trade => {
            addTradeData(year, month, trade.category, {
                pair: trade.pair,
                result: trade.result,
                status: trade.status,
                comment: trade.comment
            });
        });

        updateContent();
        document.getElementById('bulkInput').value = '';
        showSuccessMessage(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${trades.length} —Å–¥–µ–ª–æ–∫`);
    }
}

// –û–±–Ω–æ–≤–ª—è–µ–º HTML —Ñ–æ—Ä–º—É –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
function showBulkInput() {
    document.querySelector('.admin-form').innerHTML = `
        <div class="input-group">
            <label>–ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–æ–∫</label>
            <textarea id="bulkInput" rows="15" placeholder="DEFI:üöÄ
1.#FIT +20%
2.#AMT +22%

FUTURES:üöÄ
1.#BNB +35% (5—Ö)
2.#CELO +76% (20—Ö)

SPOT:üöÄ
1.#TWT +35%
2.#NEAR -15%"></textarea>
        </div>
        <div class="button-group">
            <button onclick="parseBulkTrades()" class="add-btn">–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Å–¥–µ–ª–∫–∏</button>
            <button onclick="showRegularForm()" class="secondary-btn">–û–±—ã—á–Ω–∞—è —Ñ–æ—Ä–º–∞</button>
        </div>
    `;
}

// –ü–æ–∫–∞–∑ –æ–±—ã—á–Ω–æ–π —Ñ–æ—Ä–º—ã
function showRegularForm() {
    document.querySelector('.admin-form').innerHTML = `
        <div class="input-group">
            <label>–ü–∞—Ä–∞</label>
            <input type="text" id="pairInput" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: BTC/USDT">
        </div>
        <div class="input-group">
            <label>–†–µ–∑—É–ª—å—Ç–∞—Ç (%)</label>
            <input type="number" id="resultInput" step="0.01">
        </div>
        <div class="input-group">
            <label>–°—Ç–∞—Ç—É—Å</label>
            <select id="statusInput">
                <option value="profit">–ü—Ä–∏–±—ã–ª—å</option>
                <option value="loss">–£–±—ã—Ç–æ–∫</option>
                <option value="neutral">–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π</option>
            </select>
        </div>
        <div class="input-group">
            <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
            <textarea id="commentInput" rows="3"></textarea>
        </div>
        <div class="button-group">
            <button onclick="addTrade()" class="add-btn">–î–æ–±–∞–≤–∏—Ç—å —Å–¥–µ–ª–∫—É</button>
            <button onclick="showBulkInput()" class="secondary-btn">–ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ</button>
        </div>
    `;
}

// –í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function logoutAdmin() {
    isAuthenticated = false;
    isAdminPanelVisible = false;
    const panel = document.getElementById('adminPanel');
    gsap.to(panel, {
        right: -400,
        duration: 0.3,
        ease: 'power2.in',
        onComplete: () => panel.classList.remove('visible')
    });
}

// –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
function showSuccessMessage(message) {
    const msgElem = document.createElement('div');
    msgElem.className = 'success-message fade-in';
    msgElem.textContent = message;
    
    document.querySelector('.admin-form').appendChild(msgElem);
    
    setTimeout(() => {
        gsap.to(msgElem, {
            opacity: 0,
            y: -20,
            duration: 0.3,
            onComplete: () => msgElem.remove()
        });
    }, 2000);
}

// –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', () => {
    document.getElementById('yearSelect').addEventListener('change', updateAdminPanelInfo);
    document.getElementById('monthSelect').addEventListener('change', updateAdminPanelInfo);
    document.getElementById('categorySelect').addEventListener('change', updateAdminPanelInfo);
    isAuthenticated = false;
    isAdminPanelVisible = false;
});
